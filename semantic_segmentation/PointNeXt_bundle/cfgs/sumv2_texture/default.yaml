# data augmentation
dataset:
  common:
    NAME: SUMV2_Texture
    data_root: ../../data/sumv2_tex_texpcl/  #../../data/sumv2_tex_poisson/
    voxel_size: 0.02
  train:
    split: train
    voxel_max: 64000
    loop: 30 #6  # here, the training has been looped 30 times. therefore, the training epochs do not need much.
    presample: False
  val:
    split: val
    voxel_max: null
    presample: False
  test:
    split: test
    voxel_max: null
    presample: False

feature_keys: pos,x
num_classes: 20
batch_size: 2 #2  #2 #32 PoinNet: 6, PointNet++: 10, PointNext-xl: 2
val_batch_size: 1

visualize: True

dataloader:
  num_workers: 6

datatransforms:
  train: [PointsToTensor, PointCloudScaling, PointCloudRotation, PointCloudJitter]
  val:  [PointsToTensor ]
  vote: [ChromaticDropGPU]
  kwargs:
    color_drop: 0.2
    gravity_dim: 2
    scale: [0.9, 1.1]
    mirror: [0, 0, 0]
    angle: [0, 0, 1]
    jitter_sigma: 0.005
    jitter_clip: 0.02

#datatransforms:
#  train: [PointCloudToTensor, PointCloudRotation, PointCloudScaleAndJitter, ChromaticAutoContrast, NumpyChromaticNormalize]
#  val: [PointCloudToTensor, NumpyChromaticNormalize]
#  test: [PointCloudToTensor, NumpyChromaticNormalize]
#  vote: [ChromaticDropGPU]
#  kwargs:
#    color_drop: 0.2
#    rotate_dim: 2
#    scale: [0.9, 1.1]
#    mirror: [0, 0, 0]
#    angle: [0, 0, 1]
#    jitter_sigma: 0.005
#    jitter_clip: 0.02
# ---------------------------------------------------------------------------- #
# Training cfgs
# ---------------------------------------------------------------------------- #
val_fn: validate
ignore_index: 0
epochs: 100

cls_weighed_loss: True #True

criterion_args:
  NAME: CrossEntropy
  label_smoothing: 0.2 #0.2

optimizer:
 NAME: 'adamw'  # performs 1 point better than adam
 weight_decay: 1.0e-4

# lr_scheduler:
sched: cosine
warmup_epochs: 0

min_lr: 1.0e-5 #
lr: 0.01 # LR linear rule.

grad_norm_clip: 10
use_voting: False
# ---------------------------------------------------------------------------- #
# io and misc
# ---------------------------------------------------------------------------- #
log_dir: 'sumv2_texture'
save_freq: -1 # save epoch every xxx epochs, -1 only save last and best.
save_last_epochs: 5 #5 # save last n epochs checkpoints
val_freq: 1

wandb:
  project: PointNeXt-SUMV2_Texture